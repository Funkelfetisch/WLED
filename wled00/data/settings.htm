<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
	<title>NEBULITE Settings</title>
	<script>
		var d=document;
		var loc = false, locip;
		function gId(n){return d.getElementById(n);}
		// https://www.educative.io/edpresso/how-to-dynamically-load-a-js-file-in-javascript
		function loadJS(FILE_URL, async = true) {
			let scE = d.createElement("script");
			scE.setAttribute("src", FILE_URL);
			scE.setAttribute("type", "text/javascript");
			scE.setAttribute("async", async);
			d.body.appendChild(scE);
			// success event 
			scE.addEventListener("load", () => {
				//console.log("File loaded");
				GetV();
			});
			// error event
			scE.addEventListener("error", (ev) => {
				console.log("Error on loading file", ev);
				alert("Loading of configuration script failed.\nIncomplete page data!");
			});
		}
		function isO(i) { return (i && typeof i === 'object' && !Array.isArray(i)); }
		// load settings and insert values into DOM
		function ldS() {
			var url = (loc?`http://${locip}`:'') + '/cfg.json';
			fetch(url, {
				method: 'get'
			})
			.then(res => {
				if (!res.ok) gId('lserr').style.display = "inline";
				return res.json();
			})
			.then(json => {
				umCfg = json.um;
				urows="";
				if (isO(umCfg)) {
					for (const [k,o] of Object.entries(umCfg)) {
							urows += `<button type="submit" onclick="window.location=\'./settings/um?um=${k}\'">${k} (UM ☾)</button>`;
					}
				}
				gId("configMenu").innerHTML = urows;
				var url = (loc?`http://${locip}`:'') + '/settings/s.js?p=0';
				loadJS(url, false);	// If we set async false, file is loaded and executed, then next statement is processed
			})
			.catch((error)=>{
				gId('lserr').style.display = "inline";
				console.log(error);
			});
		}
		function S(){
			if (window.location.protocol == "file:") {
				loc = true;
				locip = localStorage.getItem('locIp');
				if (!locip) {
					locip = prompt("File Mode. Please enter WLED IP!");
					localStorage.setItem('locIp', locip);
				}
			}
			//WLEDMM: add ldS and move loadJS there (like in settings_um)
			ldS();
		}
	</script>
	<style>
		body {
			text-align: center;
			background: #222;
			height: 100px;
			margin: 0;
		}
		html {
			--h: 9vh;
		}
		button {
			background: #333;
			color: #fff;
			font-family: Verdana, Helvetica, sans-serif;
			display: block;
			border: 1px solid #333;
			border-radius: var(--h);
			font-size: 6vmin;
			/* height: var(--h); WLEDMM remove to allow more compact display*/
			width: calc(100% - 40px);
			margin: 2vh auto 0;
			cursor: pointer;
		}
	</style>
	<style>@import url("style.css");</style>
</head>
<body onload="S()">


<div id="imgw" class="logoWrapper"><svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" style="enable-background:new 0 0 280.92 35.69" viewBox="0 0 280.92 35.69"><path d="M26.19 29.34 3.02.13 2.92 0H0v35.14h3.14V5.16l23.77 29.98h2.42V0h-3.14zm76.4-12.33c2.55-1.25 5.21-3.62 5.21-8.1v-.1c0-2.22-.78-4.12-2.32-5.66-2.03-2.03-5.3-3.15-9.2-3.15H81.71v35.14h15.31c7.71 0 12.7-3.82 12.7-9.74v-.1c0-3.97-2.46-6.82-7.13-8.29zm-6.6-1.11H84.96V3.05h11.28c5.1 0 8.27 2.3 8.27 6.01v.1c0 4.16-3.27 6.74-8.52 6.74zm1.13 16.2H84.96V18.95h11.33c6.54 0 10.14 2.26 10.14 6.35v.1c0 4.13-3.57 6.7-9.31 6.7zm50.21-11.62c0 7.76-4.06 12.21-11.13 12.21-7.2 0-11.33-4.54-11.33-12.46V0h-3.24v20.48c0 9.38 5.54 15.21 14.47 15.21s14.47-5.94 14.47-15.5V0h-3.24v20.48zM167.75 0h-3.24v35.14h23.47V32.1h-20.23zm32.49 0h3.24v35.14h-3.24zm15.61 3.05h12.01v32.09h3.24V3.05h12.01V0h-27.26zM42.81 35.14h25.45V32.1H42.81zm3.56-19.24h-3.56v3.05h25.2V15.9zM68.01 3.05V0h-25.2v3.05h3.24zm187.46 32.09h25.45V32.1h-25.45zm3.56-19.24h-3.56v3.05h25.2V15.9zm21.64-12.85V0h-25.2v3.05h3.25z" style="fill:#fff"/></svg></div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Beyond here be dragons. You can lock yourself out if you're not careful with the WiFi Setup!</p>

<button type=submit id="b" onclick="window.location='/'">Back</button>

<button id="expertToggleBtn" onclick="toggleExpertModeSetting()">Expert Mode: OFF</button>
<script>
	// Retrieve saved expert mode state from local storage (defaults to false)
	let expertMode = localStorage.getItem("expertMode") === "true";
  
	// Update the button text on page load
	document.addEventListener('DOMContentLoaded', () => {
	  document.getElementById("expertToggleBtn").innerText =
		expertMode ? "Expert Mode: ON" : "Expert Mode: OFF";
	});
  
	function toggleExpertModeSetting() {
	  // Toggle expert mode and update local storage
	  expertMode = !expertMode;
	  localStorage.setItem("expertMode", expertMode);
	  document.getElementById("expertToggleBtn").innerText =
		expertMode ? "Expert Mode: ON" : "Expert Mode: OFF";
	}
  </script>

<button type="submit" onclick="window.location='./settings/wifi'">Wi-Fi Setup</button>
<button type="submit" onclick="window.location='./settings/leds'">LED Preferences</button>
<button id="2dbtn" style="display:none;" type="submit" onclick="window.location='./settings/2D'">2D Configuration</button>
<div id="configMenu">Loading...</div>
<button type="submit" onclick="window.location='./settings/um'">Usermods (pins)</button> <!--WLEDMM: Move below UMs-->
<button type="submit" onclick="window.location='./settings/ui'">User Interface</button>
<button id="dmxbtn" style="display:none;" type="submit" onclick="window.location='./settings/dmx'">DMX Output</button>
<button type="submit" onclick="window.location='./settings/sync'">Sync Interfaces</button>
<button type="submit" onclick="window.location='./settings/time'">Time &amp; Macros</button>
<button type="submit" onclick="window.location='./settings/sec'">Security &amp; Updates</button>
<button type="submit" onclick="window.location='./edit'">File System ☾</button> <!--WLEDMM-->
<span id="lserr" style="color:red; display:none">&#9888; Could not access local storage. Make sure it is enabled in your browser.</span><hr>
</body>
</html>